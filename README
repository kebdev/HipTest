
Installation:
    Use conda or virtualenv; they are similar tools. The instructions below are for conda.

    These instructions have been tested for a Mac. If you're running Windows, it should be similar but I haven't tested it.

    Create a conda environment and activate it:
        conda create -n hiptest python=2.7 flask beautiful-soup urllib3 pyOpenSSL cryptography idna certifi
        source activate hiptest

    Run the server. To run it locally, just use
        python hip.py

    To run it in Production (not tested), you would run it in the background and redirect output.

Usage:
    By default, this runs on port 5000. an example URL is
        http://localhost:5000/content/"@chris you around?"

Improvements:
    1. Change the example URL to
         http://localhost:5000/api/msg?'Olympics are starting soon; http://www.nbcolympics.com'
            i.e. use query params
    2. The ordering in the exercise is: mentions, emoticons, links. Verify this matches the jsonify output
    3. Unit testing is currently in msg.py. Once #3 is fixed, test using cURL scripts or the equivalent.
    4. Look at using Requests instead of urllib3.
    5. Write a short script to start it in Production, activating the environment and redirecting output (unless better logging implemented; see #1).
    6. Add a method for login
    7. Add a capability for throttling users, to prevent DoS
    8. Add a cache for URLs, since fetching them is expensive
    9. Think about how to prevent a user from entering a malicious URL
    10. Send gzipped json back instead of cleartext json
    11. Add a mechanism for health reporting, that returns usages for CPU, mem, HDD, network




